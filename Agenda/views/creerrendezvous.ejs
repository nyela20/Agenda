<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="../../stylesheets/styleRegister.css">
    <title><%= title %></title>
</head>
<body>
    <div class="container">
    <h1><%= title %></h1>
    <form id="createrendezvous" action="/rendezvous/<%= agendaId %>/creer" method="POST">
        <label for="nom">Nom du rendez-vous :</label>
        <input type="text" id="nom" name="nom" required><br><br>

        <label for="description">Description :</label>
        <input type="text" id="description" name="description"><br><br>

        <label for="dateRendezVous">Date du rendez-vous :</label>
        <input type="datetime-local" id="dateRendezVous" name="dateRendezVous" required><br><br>

        <label for="dureeHeures">Durée (heures) :</label>
        <input type="number" id="dureeHeures" name="dureeHeures" min="0" value="0" required>

        <label for="dureeMinutes">(minutes) :</label>
        <input type="number" id="dureeMinutes" name="dureeMinutes" min="0" value="0" required><br><br>
        
        <label style="visibility: hidden;" for="createurEmail">Createur :</label>
        <input name="createurEmail" value="<%= userEmailConnected %>" style="visibility: hidden;" readonly required> <br>

        <!-- Nouveaux champs pour la récurrence -->
        <div class="form-group">
            <label for="estRecurrent">Rendez-vous récurrent :</label>
            <input type="checkbox" id="estRecurrent" name="estRecurrent">
        </div>
        
        <div class="form-group" id="optionsRecurrence">
            <label for="typeRecurrence">Type de récurrence :</label>
            <select id="typeRecurrence" name="typeRecurrence">
                <option value="aucun">Aucun</option>
                <option value="quotidien">Chaque jour</option>
                <option value="semaine">Chaque semaine</option>
                <option value="mensuel">Chaque mois</option>
            </select>
        
            <div class="form-group">
                <label for="finRecurrence">Date de fin de récurrence :</label>
                <input type="date" id="finRecurrence" name="finRecurrence">
            </div>
        </div>

        <button type="submit">Créer le Rendez-vous</button>
    </form>
    <br>
    <div>
        <a href="/rendezvous/<%=agendaId%>"><button>Retour</button></a>
    </div>

    <div id="error-message" style="color: red; display: none;">
        La durée du rendez-vous doit être d'au moins 30 minutes.
    </div>
    </div>

    <script>
        // Gestion de l'affichage des options de Récurrence
        document.getElementById('estRecurrent').addEventListener('change', function() {
            const optionsRecurrence = document.getElementById('optionsRecurrence');
            const typeRecurrence = document.getElementById('typeRecurrence');
            const finRecurrence = document.getElementById('finRecurrence');
            
            if (this.checked) {
                optionsRecurrence.style.display = 'block';
                typeRecurrence.required = true;
                finRecurrence.required = true;
            } else {
                optionsRecurrence.style.display = 'none';
                typeRecurrence.required = false;
                finRecurrence.required = false;
                // Réinitialiser les valeurs
                typeRecurrence.value = 'aucun';
                finRecurrence.value = '';
            }
        });

        // Cacher initialement les options de récurrence
        document.getElementById('optionsRecurrence').style.display = 'none';

        // Fonction pour ajuster la durée maximale
        const dateInput = document.getElementById("dateRendezVous");
        const heuresInput = document.getElementById("dureeHeures");
        const minutesInput = document.getElementById("dureeMinutes");


        const ajusterDureeMaximale = (date, heure, minutes) => {
            if(date){
                heuresInput.value = 0;
                minutesInput.value = 0;
            }
            // Extraire l'heure et les minutes de l'heure de début
            const dateTime = new Date(dateInput.value);
            const startHour = dateTime.getHours();
            const startMinutes = dateTime.getMinutes();
            // Calcul du temps restant avant minuit (23h59)
            const maxMinutesBeforeMidnight = (23 - startHour) * 60 + (60 - startMinutes);
            // Calculer les limites pour les heures et les minutes
            let maxHours;
            maxHours = Math.floor(maxMinutesBeforeMidnight / 60); // Heure maximale
            let maxMinutes = (maxMinutesBeforeMidnight % 60) // Minutes restantes
            if(parseInt(maxHours) - parseInt(heuresInput.value) > 0){
                maxMinutes = 60
            }else{
                if(parseInt(maxHours) == parseInt(heuresInput.value)){
                    minutesInput.value = maxMinutes
                }
            }
            if(minutesInput.value >= 60){
                heuresInput.value = parseInt(heuresInput.value) + 1
                minutesInput.value = 0
            }
            heuresInput.max = maxHours;
            minutesInput.max = maxMinutes;
        };

        heuresInput.addEventListener("change", () => { ajusterDureeMaximale(false, true, false); });
        minutesInput.addEventListener("change", () => { ajusterDureeMaximale(false, false, true);});
        dateInput.addEventListener("change", () =>{ ajusterDureeMaximale(true, false, false);});
        
        // gestion de la soumission du formulaire
        document.getElementById('createrendezvous').addEventListener('submit', function(event) {
            const heures = parseInt(heuresInput.value);
            const minutes = parseInt(minutesInput.value);
            const totalMinutes = heures * 60 + minutes;  // calcul de la durée totale en minutes

            // verifier si la durée du rdv est inferieure à 30 minutes
            if (totalMinutes < 30) {
                document.getElementById('error-message').style.display = 'block'; // Afficher le message
                event.preventDefault(); // empecher la soumission du formulaire
            }
        });

    </script>
</body>
</html>
